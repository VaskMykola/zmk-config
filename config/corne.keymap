/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            layers = <0>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <13 38>;
        };

        password_menu {
            bindings = <&kp LS(LC(SPACE))>;
            key-positions = <10 13 14>;
        };

        settigns {
            bindings = <&tog 4>;
            key-positions = <5 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E             &kp R         &kp T                   &kp Y        &kp U  &kp I                   &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D             &kp F         &kp G                   &kp H        &kp J  &kp K                   &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C             &kp V         &kp B                   &kp N        &kp M  &kp COMMA               &kp DOT  &kp FSLH  &none
                     &mt LCTRL ESCAPE  &kp LEFT_ALT  &mt LEFT_SHIFT SPACE    &lt 2 ENTER  &mo 1  &mt LEFT_GUI BACKSPACE
            >;
        };

        symbols {
            bindings = <
&trans  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans     &trans     &none     &kp BSLH  &trans
&trans  &kp N6     &kp N7  &kp N8  &kp N9  &kp N0    &trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &trans
&trans  &kp GRAVE  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans    &trans    &trans
                           &trans  &trans  &trans    &trans  &trans     &trans
            >;
        };

        else {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &trans           &kp END   &kp HOME  &trans     &trans  &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10    &kp LEFT         &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &kp F11  &kp F12    &kp PRINTSCREEN  &trans    &trans    &trans     &trans  &trans
                        &trans  &trans   &trans     &trans           &trans    &kp DEL
            >;
        };

        block {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;
        };

        settings {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &soft_off  &bootloader  &trans      &trans      &trans          &trans
&trans  &trans         &trans         &trans         &trans         &trans           &trans     &bt BT_PRV   &bt BT_NXT  &trans      &trans          &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans     &trans       &trans      &bt BT_CLR  &bt BT_CLR_ALL  &trans
                                      &trans         &trans         &trans           &trans     &trans       &trans
            >;
        };
    };
};
